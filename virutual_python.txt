Python -m vent myvenv
django yuto$ source myvenv/bin/activate (仮想環境へアクセス)
django-admin startproject (project_name)  (プロジェクト作成)
実行ディレクトリにproject_nameのディレクトリが作成
python manage.py runserver (仮想環境で動かす)
python manage.py makemigrations “file_name” 
python manage.py migrate “fn”
python manage.py createsuperuser

python manage.py startapp (application_name)

デプロイ:インターネットで公開
pip freeze > requirements.txt
あなたのサーバーにどんなPythonパッケージがインストールされる必要があるか、Herokuに伝えるものです。

Profile 作成
web: gunicorn mysite.wsgi

Runtime.txt 作成

コンピューター上のローカルとサーバーでは設定に違いがあります。Herokuとコンピューターでは別のデータベースをそれぞれつかっています。そこで、別途ファイルを作成し、ローカル環境で動かすための設定を保存しておく必要があります。
mysite/local_settings.py

mysite/settings.pyの変更
ここでアプリを有効にする

Modelを定義したり変更した時は、忘れずにマイグレーションを行いましょう(ここ大事 DBのこと)
(virtualenv)$ python manage.py makemigrations
(virtualenv)$ python manage.py migrate

../wsgi.pyの設定変更

Heroku のinstall
heroku login

Git 
Git add -A .
Git commit -m “com”
Git push heroku master

以上の操作が終わったら、コミットしてあげて、下記のコマンドを打てばHerokuへデプロイできます
ただし、DBが作成されてないので、マイグレーションを行なってあげます
そしたら、ブラウザで見てあげるために、「heroku open」してあげればHeroku上で動作しているのが確認できるはずです

$ git push heroku master
$ heroku run python manage.py migrate
$ heroku open

Heroic command
heroku open

削除はそのまま消す

＊　このディレクトリはmysiteの一部です
階層としては
start_project
- start_application
- manage.py
- project_name_directory (全体の設定?)